//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2024.06.13 at 03:32:22 PM PDT 
//


package org.alpa.wjamec.pairings.jaxb;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Aircraft.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="Aircraft"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Boeing 737-700 Winglets"/&gt;
 *     &lt;enumeration value="Boeing 737-800 Winglets"/&gt;
 *     &lt;enumeration value="Boeing 737-700"/&gt;
 *     &lt;enumeration value="Boeing 737 MAX8"/&gt;
 *     &lt;enumeration value="Boeing 737-800"/&gt;
 *     &lt;enumeration value="Boeing 737-800 Freighter"/&gt;
 *     &lt;enumeration value="Boeing 787-9"/&gt;
 *     &lt;enumeration value="Bombardier Q400"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "Aircraft")
@XmlEnum
public enum Aircraft {

    @XmlEnumValue("Boeing 737-700 Winglets")
    BOEING_737_700_WINGLETS("Boeing 737-700 Winglets"),
    @XmlEnumValue("Boeing 737-800 Winglets")
    BOEING_737_800_WINGLETS("Boeing 737-800 Winglets"),
    @XmlEnumValue("Boeing 737-700")
    BOEING_737_700("Boeing 737-700"),
    @XmlEnumValue("Boeing 737 MAX8")
    BOEING_737_MAX_8("Boeing 737 MAX8"),
    @XmlEnumValue("Boeing 737-800")
    BOEING_737_800("Boeing 737-800"),
    @XmlEnumValue("Boeing 737-800 Freighter")
    BOEING_737_800_FREIGHTER("Boeing 737-800 Freighter"),
    @XmlEnumValue("Boeing 787-9")
    BOEING_787_9("Boeing 787-9"),
    @XmlEnumValue("Bombardier Q400")
    BOMBARDIER_Q_400("Bombardier Q400");
    private final String value;

    Aircraft(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Aircraft fromValue(String v) {
        for (Aircraft c: Aircraft.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
